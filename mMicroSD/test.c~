#include "sd_lowlevel.h"
#include "m_general.h"
#include "m_usb.h"

void error (void)
{
    for (;;)
    {
        m_red (TOGGLE);
        m_wait (125);
    }
}

int main (void)
{
    m_disableJTAG();
    m_clockdivide (1);  // set clock to 8MHz
    
    start_spi (SPI_LOW_SPEED);
    
    sei();
    
    m_usb_init();
    while (!m_usb_isconnected())
    {
        m_red (TOGGLE);
        m_wait (250);
    }
    m_red (ON);
    m_wait (500);
    m_red (OFF);
    
    m_green (ON);
    m_wait (1);  // wait 1ms after power-up
    
    m_green (OFF);
    
    m_red (ON);
    
    if (!reset_card())
    {
        m_usb_tx_string ("Error resetting SD card\r\n");
        error();
    }
    
    if (!initialize_card())
    {
        m_usb_tx_string ("Error initializing SD card\r\n");
        error();
    }
    
    // set block length to 512
    if (!set_block_length (512))
    {
        m_usb_tx_string ("Error sending block length command\r\n");
        error();
    }
    
    m_red (OFF);
    
    
    
    
    /*if (!read_block (512))
    {
        m_usb_tx_string ("Error reading block\r\n");
        error();
    }
    
    m_usb_tx_string ("Data:\r\n");
    m_usb_tx_hex (0);
    m_usb_tx_string ("\t\t");
    for (uint16_t i = 0; i < 512; i++)
    {
        m_usb_tx_hex (block[i]);
        m_usb_tx_string ("\t");
        if ((i + 1) % 8 == 0 && i + 1 < 512)
        {
            m_usb_tx_string ("\r\n");
            m_usb_tx_hex (i + 1);
            m_usb_tx_string ("\t\t");
        }
    }
    m_usb_tx_string ("\r\n");*/
    
    
    char fill[33] = "abcdefghijklmnopqrstuvwxyz123456";
    int j = 0;
    for (int i = 0; i < 512; i++)
    {
        block[i] = fill[j++];
        if (j == 33)
            j = 0;
    }
    
    if (!write_block (0))
    {
        m_usb_tx_string ("Error writing block\r\n");
        error();
    }
    
    if (!read_block (0))
    {
        m_usb_tx_string ("Error reading block\r\n");
        error();
    }
    
    m_usb_tx_string ("Data:\r\n");
    m_usb_tx_hex (0);
    m_usb_tx_string ("\t\t");
    for (uint16_t i = 0; i < 512; i++)
    {
        m_usb_tx_hex (block[i]);
        m_usb_tx_string ("\t");
        if ((i + 1) % 8 == 0 && i + 1 < 512)
        {
            m_usb_tx_string ("\r\n");
            m_usb_tx_hex (i + 1);
            m_usb_tx_string ("\t\t");
        }
    }
    m_usb_tx_string ("\r\n");
    
    for (;;)
    {
        m_green (TOGGLE);
        m_wait (125);
    }
    
    return 0;
}
